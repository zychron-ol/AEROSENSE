# encoding: utf-8
# 2024 R1
SetScriptVersion(Version="24.1.144")
system1 = GetSystem(Name="SYS")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsDiscoveryGeometry=True)
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="General Non-linear Materials",
    Source="General Materials Non-linear.xml")
library2 = EngData.OpenLibrary(
    Name="Explicit Materials",
    Source="Explicit_Materials.xml")
library3 = EngData.OpenLibrary(
    Name="Hyperelastic Materials",
    Source="Hyperelastic_Materials.xml")
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
matl1 = engineeringData1.ImportMaterial(
    Name="PALLADIUM",
    Source="Explicit_Materials.xml")
material1 = engineeringData1.GetMaterial(Name="Palladium")
material1.Delete()
geometry1.Exit()
geometry1.Edit(IsDiscoveryGeometry=True)
geometry1.Exit()
geometry1.Edit(IsDiscoveryGeometry=True)
geometry1.Exit()
geometry1.SetFile(FilePath="C:/Users/sunil/OneDrive/Desktop/New folder/Sem 4/Microcantilever Geometry-1.STEP")
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Refresh()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
template1 = GetTemplate(TemplateName="Fluid Flow")
system2 = template1.CreateSystem()
geometry2 = system2.GetContainer(ComponentName="Geometry")
geometry2.SetFile(FilePath="C:/Users/sunil/OneDrive/Desktop/New folder/Sem 4/Microcantilever Geometry-1.STEP")
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system2.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Edit()
template2 = GetTemplate(TemplateName="FLUENT")
system3 = template2.CreateSystem()
setup1 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Dimension="ThreeD", Precision="Double", EnvPath={}, RunParallel=True))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Color Theme Change*Table1*PushButton3(classic_light)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Color Theme Change*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%py-exec "preferences.General.StartupMessages.ColorThemeChangeMessage.set_state(False)")')
setup1.SendCommand(Command="(%py-exec \"preferences.Appearance.ColorTheme.set_state(r'Default')\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-use-window-id 51)(cx-use-window-id 51)')
Save(Overwrite=True)
mesh1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ImportSubMenu*Mesh...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh1.Edit()
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
